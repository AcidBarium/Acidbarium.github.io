import{_ as c}from"./ValaxyMain.vue_vue_type_style_index_0_lang.IVu3v1-4.js";import{f as E,a as y}from"./chunks/vue-router.DDVc9App.js";import{A as o,N as u,a3 as l,U as n,S as i,W as s,u as A,O as F}from"./framework.MaWbPGGC.js";import"./app.DIG8ASj4.js";import"./chunks/dayjs.DRNXKsfK.js";import"./chunks/vue-i18n.PIml-ud3.js";import"./chunks/pinia.DQTuBk3f.js";import"./chunks/@vueuse/motion.B_4jFum_.js";import"./chunks/nprogress.Y9-A6VbA.js";import"./YunComment.vue_vue_type_style_index_0_lang.ChocsJ8O.js";import"./index.C5okkQwF.js";import"./YunPageHeader.vue_vue_type_script_setup_true_lang.C5XaEs4c.js";import"./post.BW3-DAXA.js";const D=E("/posts/llvmOriPass",async e=>JSON.parse('{"title":"LLVM常见Pass","description":"","frontmatter":{"title":"LLVM常见Pass","date":"2025-06-22","updated":"2025-10-13","categories":"LLVM","tags":["笔记","pass"]},"headers":[{"level":2,"title":"Pass 注册和调用","slug":"pass-注册和调用","link":"#pass-注册和调用","children":[{"level":3,"title":"Mem2Reg.cpp","slug":"mem2reg-cpp","link":"#mem2reg-cpp","children":[]},{"level":3,"title":"功能总结一句：","slug":"功能总结一句","link":"#功能总结一句","children":[]}]},{"level":2,"title":"逐段解读","slug":"逐段解读","link":"#逐段解读","children":[{"level":3,"title":"1. 导入头文件","slug":"_1-导入头文件","link":"#_1-导入头文件","children":[]},{"level":3,"title":"2. promoteMemoryToRegister() 函数","slug":"_2-promotememorytoregister-函数","link":"#_2-promotememorytoregister-函数","children":[]},{"level":3,"title":"GVN.cpp","slug":"gvn-cpp","link":"#gvn-cpp","children":[]}]},{"level":2,"title":"原英文注释","slug":"原英文注释","link":"#原英文注释","children":[]},{"level":2,"title":"中文翻译 + 逐句解读","slug":"中文翻译-逐句解读","link":"#中文翻译-逐句解读","children":[{"level":3,"title":"这个 Pass 实现了：","slug":"这个-pass-实现了","link":"#这个-pass-实现了","children":[]},{"level":3,"title":"注意：","slug":"注意","link":"#注意","children":[]},{"level":3,"title":"优化前：","slug":"优化前","link":"#优化前","children":[]},{"level":3,"title":"GVN 优化后：","slug":"gvn-优化后","link":"#gvn-优化后","children":[]},{"level":3,"title":"DCE.cpp","slug":"dce-cpp","link":"#dce-cpp","children":[]},{"level":3,"title":"ADCE.cpp","slug":"adce-cpp","link":"#adce-cpp","children":[]},{"level":3,"title":"LICM.cpp","slug":"licm-cpp","link":"#licm-cpp","children":[]},{"level":3,"title":"这个 Pass 实现了：","slug":"这个-pass-实现了-1","link":"#这个-pass-实现了-1","children":[]},{"level":3,"title":"它做什么？","slug":"它做什么","link":"#它做什么","children":[]},{"level":3,"title":"还能做：","slug":"还能做","link":"#还能做","children":[]},{"level":3,"title":"为什么重要？","slug":"为什么重要","link":"#为什么重要","children":[]},{"level":3,"title":"用到的分析：","slug":"用到的分析","link":"#用到的分析","children":[]}]},{"level":2,"title":"举个例子：","slug":"举个例子","link":"#举个例子","children":[{"level":3,"title":"优化前：","slug":"优化前-1","link":"#优化前-1","children":[]},{"level":3,"title":"LICM 优化后：","slug":"licm-优化后","link":"#licm-优化后","children":[]}]},{"level":2,"title":"命令行调用：","slug":"命令行调用","link":"#命令行调用","children":[]},{"level":2,"title":"总结一句：","slug":"总结一句","link":"#总结一句","children":[{"level":3,"title":"LoopUnroll.cpp","slug":"loopunroll-cpp","link":"#loopunroll-cpp","children":[]},{"level":3,"title":"它是干什么的：","slug":"它是干什么的","link":"#它是干什么的","children":[]},{"level":3,"title":"它的特点：","slug":"它的特点","link":"#它的特点","children":[]},{"level":3,"title":"📖 总结一句：","slug":"📖-总结一句","link":"#📖-总结一句","children":[]},{"level":3,"title":"JumpThreading.cpp","slug":"jumpthreading-cpp","link":"#jumpthreading-cpp","children":[]}]},{"level":2,"title":"什么是 Jump Threading？","slug":"什么是-jump-threading","link":"#什么是-jump-threading","children":[]},{"level":2,"title":"举个直观的例子：","slug":"举个直观的例子","link":"#举个直观的例子","children":[]},{"level":2,"title":"它是怎么做的？","slug":"它是怎么做的","link":"#它是怎么做的","children":[]},{"level":2,"title":"举个 LLVM 中的典型应用：","slug":"举个-llvm-中的典型应用","link":"#举个-llvm-中的典型应用","children":[]},{"level":2,"title":"优化效果：","slug":"优化效果","link":"#优化效果","children":[]},{"level":2,"title":"总结一句：","slug":"总结一句-1","link":"#总结一句-1","children":[{"level":3,"title":"SLPVectorizer.cpp","slug":"slpvectorizer-cpp","link":"#slpvectorizer-cpp","children":[]},{"level":3,"title":"它怎么做？","slug":"它怎么做","link":"#它怎么做","children":[]},{"level":3,"title":"举个例子","slug":"举个例子-1","link":"#举个例子-1","children":[]},{"level":3,"title":"GlobalDCE.cpp","slug":"globaldce-cpp","link":"#globaldce-cpp","children":[]},{"level":3,"title":"Inliner.cpp","slug":"inliner-cpp","link":"#inliner-cpp","children":[]},{"level":3,"title":"SROA.cpp","slug":"sroa-cpp","link":"#sroa-cpp","children":[]}]},{"level":2,"title":"它的作用：","slug":"它的作用","link":"#它的作用","children":[]},{"level":2,"title":"总结一句：","slug":"总结一句-2","link":"#总结一句-2","children":[]}],"relativePath":"pages/posts/llvmOriPass.md","lastUpdated":1761807823000}'),{lazy:(e,t)=>e.name===t.name}),O={__name:"llvmOriPass",setup(e,{expose:t}){var r;const{data:k}=D(),p=y(),h=Object.assign(p.meta.frontmatter||{},((r=k.value)==null?void 0:r.frontmatter)||{});return p.meta.frontmatter=h,o("pageData",k.value),o("valaxy:frontmatter",h),globalThis.$frontmatter=h,t({frontmatter:{title:"LLVM常见Pass",date:"2025-06-22",updated:"2025-10-13",categories:"LLVM",tags:["笔记","pass"]}}),(a,d)=>{const g=c;return F(),u(g,{frontmatter:A(h)},{"main-content-md":l(()=>[...d[0]||(d[0]=[i("p",null,[i("code",null,"llvm/lib/Transforms/Scalar/"),s(" 这个目录，它是 LLVM 源码里"),i("strong",null,"最重要"),s("的 Pass 实现目录之一，放的都是"),i("strong",null,"基于标量级优化（Scalar Optimization）"),s(" 的 Pass —— 也就是不涉及复杂循环嵌套、多维数组、矢量化的高级优化，而是针对单个值、单个变量、单个基本块、单个循环的"),i("strong",null,"局部优化"),s("。")],-1),i("h2",{id:"pass-注册和调用",tabindex:"-1"},[s("Pass 注册和调用 "),i("a",{class:"header-anchor",href:"#pass-注册和调用","aria-label":'Permalink to "Pass 注册和调用"'},"​")],-1),i("p",null,[s("这些 Pass 都是通过 "),i("code",null,"PassBuilder"),s(" 或 "),i("code",null,"legacy PassManager"),s(" 注册的。 在 "),i("code",null,"llvm/lib/Passes/PassRegistry.def"),s(" 或 "),i("code",null,"llvm/lib/Passes/PassBuilder.cpp"),s(" 里能找到它们的别名和调用方式。")],-1),i("h3",{id:"mem2reg-cpp",tabindex:"-1"},[s("Mem2Reg.cpp "),i("a",{class:"header-anchor",href:"#mem2reg-cpp","aria-label":'Permalink to "Mem2Reg.cpp"'},"​")],-1),i("p",null,"llvm-project-release-13.x\\llvm-project-release-13.x\\llvm\\lib\\Transforms\\Utils\\Mem2Reg.cpp",-1),i("p",null,"Mem2Reg 是 LLVM 中最常用、最基础、性能收益最大的 Pass，把 IR 从“命令式内存模型”转成“SSA 寄存器模型”，便于后续做所有高级优化（比如 GVN、LICM、DCE 等）。",-1),i("details",null,[i("summary",null,"Mem2Reg.cpp"),i("div",{class:"language-cpp vp-adaptive-theme"},[i("button",{title:"Copy Code",class:"copy"}),i("span",{class:"lang"},"cpp"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[i("code",{"v-pre":""},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//===- Mem2Reg.cpp - The -mem2reg pass, a wrapper around the Utils lib ----===//")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// See https://llvm.org/LICENSE.txt for license information.")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//===----------------------------------------------------------------------===//")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// This pass is a simple pass wrapper around the PromoteMemToReg function call")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// exposed by the Utils library.")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//===----------------------------------------------------------------------===//")]),s(`
`),i("span",{class:"line"}),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"#include"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},' "llvm/Transforms/Utils/Mem2Reg.h"')]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"#include"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},' "llvm/ADT/Statistic.h"')]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"#include"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},' "llvm/Analysis/AssumptionCache.h"')]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"#include"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},' "llvm/IR/BasicBlock.h"')]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"#include"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},' "llvm/IR/Dominators.h"')]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"#include"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},' "llvm/IR/Function.h"')]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"#include"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},' "llvm/IR/Instructions.h"')]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"#include"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},' "llvm/IR/PassManager.h"')]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"#include"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},' "llvm/InitializePasses.h"')]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"#include"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},' "llvm/Pass.h"')]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"#include"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},' "llvm/Support/Casting.h"')]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"#include"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},' "llvm/Transforms/Utils.h"')]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"#include"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},' "llvm/Transforms/Utils/PromoteMemToReg.h"')]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"#include"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," <vector>")]),s(`
`),i("span",{class:"line"}),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"using"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," namespace"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," llvm"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},";")]),s(`
`),i("span",{class:"line"}),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"#define"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," DEBUG_TYPE"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},' "mem2reg"')]),s(`
`),i("span",{class:"line"}),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"STATISTIC"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(NumPromoted, "),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},`"Number of alloca's promoted"`),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},");")]),s(`
`),i("span",{class:"line"}),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"static"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," bool"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," promoteMemoryToRegister"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"Function"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," &"),i("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"F"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", "),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"DominatorTree"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," &"),i("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"DT"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},",")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"                                   AssumptionCache"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," &"),i("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"AC"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},") {")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," std"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"::vector"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"<"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"AllocaInst "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"*>"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," Allocas;")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," BasicBlock "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"&"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"BB "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," F."),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"getEntryBlock"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"();"),i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}}," // Get the entry node for the function")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," bool"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," Changed "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," false"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},";")]),s(`
`),i("span",{class:"line"}),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," while"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," ("),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"true"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},") {")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"   Allocas."),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"clear"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"();")]),s(`
`),i("span",{class:"line"}),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"   // Find allocas that are safe to promote, by looking at all instructions in")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"   // the entry node")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"   for"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," ("),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"BasicBlock"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"::iterator I "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," BB."),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"begin"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(), E "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," --"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"BB."),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"end"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(); I "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"!="),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," E; "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"++"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"I)")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"     if"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," (AllocaInst "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"*"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"AI "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," dyn_cast"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"<"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"AllocaInst"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},">(I))"),i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}}," // Is it an alloca?")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"       if"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," ("),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"isAllocaPromotable"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(AI))")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"         Allocas."),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"push_back"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(AI);")]),s(`
`),i("span",{class:"line"}),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"   if"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," (Allocas."),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"empty"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"())")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"     break"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},";")]),s(`
`),i("span",{class:"line"}),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"   PromoteMemToReg"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(Allocas, DT, "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"&"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"AC);")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"   NumPromoted "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"+="),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," Allocas."),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"size"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"();")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"   Changed "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," true"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},";")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," }")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," return"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," Changed;")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")]),s(`
`),i("span",{class:"line"}),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"PreservedAnalyses"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," PromotePass"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"::"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"run"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"Function"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," &"),i("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"F"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", "),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"FunctionAnalysisManager"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," &"),i("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"AM"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},") {")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," auto"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," &"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"DT "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," AM.getResult"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"<"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"DominatorTreeAnalysis"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},">"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(F);")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," auto"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," &"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"AC "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," AM.getResult"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"<"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"AssumptionAnalysis"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},">"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(F);")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," if"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," ("),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"!"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"promoteMemoryToRegister"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(F, DT, AC))")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"   return"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," PreservedAnalyses"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"::"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"all"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"();")]),s(`
`),i("span",{class:"line"}),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," PreservedAnalyses PA;")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," PA.preserveSet"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"<"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"CFGAnalyses"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},">"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"();")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," return"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," PA;")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")]),s(`
`),i("span",{class:"line"}),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"namespace"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {")]),s(`
`),i("span",{class:"line"}),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"struct"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," PromoteLegacyPass"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," : "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"public"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," FunctionPass"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}}," // Pass identification, replacement for typeid")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," static"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," char"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," ID;")]),s(`
`),i("span",{class:"line"}),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," PromoteLegacyPass"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"() : "),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"FunctionPass"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(ID) {")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"   initializePromoteLegacyPassPass"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"*"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"PassRegistry"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"::"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"getPassRegistry"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"());")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," }")]),s(`
`),i("span",{class:"line"}),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}}," // runOnFunction - To run this pass, first we calculate the alloca")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}}," // instructions that are safe for promotion, then we promote each one.")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," bool"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," runOnFunction"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"Function"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," &"),i("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"F"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},") "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"override"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"   if"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," ("),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"skipFunction"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(F))")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"     return"),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," false"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},";")]),s(`
`),i("span",{class:"line"}),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"   DominatorTree "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"&"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"DT "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," getAnalysis"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"<"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"DominatorTreeWrapperPass"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},">()."),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"getDomTree"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"();")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"   AssumptionCache "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"&"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"AC "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"=")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"       getAnalysis"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"<"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"AssumptionCacheTracker"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},">()."),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"getAssumptionCache"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(F);")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"   return"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," promoteMemoryToRegister"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(F, DT, AC);")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," }")]),s(`
`),i("span",{class:"line"}),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," void"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," getAnalysisUsage"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"AnalysisUsage"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," &"),i("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"AU"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},") "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"const"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," override"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"   AU.addRequired"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"<"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"AssumptionCacheTracker"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},">"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"();")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"   AU.addRequired"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"<"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"DominatorTreeWrapperPass"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},">"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"();")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"   AU."),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"setPreservesCFG"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"();")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," }")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"};")]),s(`
`),i("span",{class:"line"}),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}"),i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}}," // end anonymous namespace")]),s(`
`),i("span",{class:"line"}),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"char"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," PromoteLegacyPass"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"::ID "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," 0"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},";")]),s(`
`),i("span",{class:"line"}),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"INITIALIZE_PASS_BEGIN"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(PromoteLegacyPass, "),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"mem2reg"'),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", "),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"Promote Memory to "')]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'                                                   "Register"'),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},",")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"                     false"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", "),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"false"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"INITIALIZE_PASS_DEPENDENCY"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(AssumptionCacheTracker)")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"INITIALIZE_PASS_DEPENDENCY"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(DominatorTreeWrapperPass)")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"INITIALIZE_PASS_END"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(PromoteLegacyPass, "),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"mem2reg"'),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", "),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"Promote Memory to Register"'),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},",")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"                   false"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", "),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"false"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")")]),s(`
`),i("span",{class:"line"}),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// createPromoteMemoryToRegister - Provide an entry point to create this pass.")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"FunctionPass"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," *"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"llvm"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"::"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"createPromoteMemoryToRegisterPass"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"() {")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," return"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," new"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," PromoteLegacyPass"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"();")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])]),i("button",{class:"collapse"})])],-1),i("details",null,[i("summary",null,"具体做法"),i("h3",{id:"功能总结一句",tabindex:"-1"},[s("功能总结一句： "),i("a",{class:"header-anchor",href:"#功能总结一句","aria-label":'Permalink to "功能总结一句："'},"​")]),i("p",null,[i("strong",null,[s("这是一个封装好的 Pass，调用 "),i("code",null,"PromoteMemToReg"),s(" 工具函数，来把 "),i("code",null,"alloca"),s(" 局部变量优化成 SSA 寄存器值。")])]),i("h2",{id:"逐段解读",tabindex:"-1"},[s("逐段解读 "),i("a",{class:"header-anchor",href:"#逐段解读","aria-label":'Permalink to "逐段解读"'},"​")]),i("h3",{id:"_1-导入头文件",tabindex:"-1"},[s("1. 导入头文件 "),i("a",{class:"header-anchor",href:"#_1-导入头文件","aria-label":'Permalink to "1. 导入头文件"'},"​")]),i("p",null,[s("导入需要用到的 IR 数据结构、分析器（DominatorTree、AssumptionCache）以及工具库 "),i("code",null,"PromoteMemToReg.h"),s("。")]),i("h3",{id:"_2-promotememorytoregister-函数",tabindex:"-1"},[s("2. "),i("code",null,"promoteMemoryToRegister()"),s(" 函数 "),i("a",{class:"header-anchor",href:"#_2-promotememorytoregister-函数","aria-label":'Permalink to "2. `promoteMemoryToRegister()` 函数"'},"​")]),i("p",null,"功能："),i("ul",null,[i("li",null,[s("遍历 "),i("code",null,"Function"),s(" 的 "),i("code",null,"entry block")]),i("li",null,[s("找到所有 "),i("code",null,"alloca"),s(" 指令")]),i("li",null,[s("判断它是否是"),i("strong",null,"可提升的"),s("（"),i("code",null,"isAllocaPromotable"),s("）")]),i("li",null,[s("调用 "),i("code",null,"PromoteMemToReg()"),s(" 进行寄存器化替换")])]),i("p",null,"核心："),i("div",{class:"language-cpp vp-adaptive-theme"},[i("button",{title:"Copy Code",class:"copy"}),i("span",{class:"lang"},"cpp"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[i("code",{"v-pre":""},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"PromoteMemToReg"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(Allocas, DT, "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"&"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"AC);")])])]),i("button",{class:"collapse"})]),i("p",null,[s("⚙️ 注意："),i("strong",null,"PromoteMemToReg"),s(" 真正做了：")]),i("ul",null,[i("li",null,"SSA 重命名"),i("li",null,"Dominator Tree 分析"),i("li",null,"Phi 节点插入"),i("li",null,"替换 load/store 成 SSA 值")]),i("p",null,[s("这个文件就是把核心逻辑 "),i("code",null,"PromoteMemToReg"),s(" 包装成一个 LLVM Pass，供 PassManager 调度调用。")])],-1),i("h3",{id:"gvn-cpp",tabindex:"-1"},[s("GVN.cpp "),i("a",{class:"header-anchor",href:"#gvn-cpp","aria-label":'Permalink to "GVN.cpp"'},"​")],-1),i("p",null,'"D:\\TZB\\study\\day2\\llvm-project-release-13.x\\llvm-project-release-13.x\\llvm\\lib\\Transforms\\Scalar\\GVN.cpp"',-1),i("p",null,[i("code",null,"GVN.cpp"),s(" 是 LLVM 优化器里非常经典、核心的一个"),i("strong",null,"公共子表达式消除（CSE）+ 死载入删除（Dead Load Elimination）"),s(" Pass。")],-1),i("details",null,[i("summary",null,"详细内容"),i("h2",{id:"原英文注释",tabindex:"-1"},[s("原英文注释 "),i("a",{class:"header-anchor",href:"#原英文注释","aria-label":'Permalink to "原英文注释"'},"​")]),i("div",{class:"language-cpp vp-adaptive-theme"},[i("button",{title:"Copy Code",class:"copy"}),i("span",{class:"lang"},"cpp"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[i("code",{"v-pre":""},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//===- GVN.cpp - Eliminate redundant values and loads ---------------------===//")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// This pass performs global value numbering to eliminate fully redundant")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// instructions.  It also performs simple dead load elimination.")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// Note that this pass does the value numbering itself; it does not use the")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// ValueNumbering analysis passes.")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//===----------------------------------------------------------------------===//")])])]),i("button",{class:"collapse"})]),i("h2",{id:"中文翻译-逐句解读",tabindex:"-1"},[s("中文翻译 + 逐句解读 "),i("a",{class:"header-anchor",href:"#中文翻译-逐句解读","aria-label":'Permalink to "中文翻译 + 逐句解读"'},"​")]),i("h3",{id:"这个-pass-实现了",tabindex:"-1"},[s("这个 Pass 实现了： "),i("a",{class:"header-anchor",href:"#这个-pass-实现了","aria-label":'Permalink to "这个 Pass 实现了："'},"​")]),i("p",null,[i("strong",null,"全局值编号 (GVN, Global Value Numbering)")]),i("blockquote",null,[i("p",null,"GVN 是一种常见的优化方法，通过给表达式赋予“值号”来识别等价表达式，再消除重复计算。")]),i("p",null,[s("简单说： 如果程序里有多个表达式计算结果相同，GVN 可以"),i("strong",null,"保留第一个计算结果，后续复用，不再重复计算。")]),i("h3",{id:"注意",tabindex:"-1"},[s("注意： "),i("a",{class:"header-anchor",href:"#注意","aria-label":'Permalink to "注意："'},"​")]),i("blockquote",null,[i("p",null,[s("这个 Pass 自己做了值编号（value numbering），"),i("strong",null,[s("不依赖 "),i("code",null,"ValueNumbering"),s(" 分析器 Pass")]),s("。 换句话说，它是一个"),i("strong",null,"自包含的 GVN 实现"),s("。")])]),i("h3",{id:"优化前",tabindex:"-1"},[s("优化前： "),i("a",{class:"header-anchor",href:"#优化前","aria-label":'Permalink to "优化前："'},"​")]),i("div",{class:"language-llvm vp-adaptive-theme"},[i("button",{title:"Copy Code",class:"copy"}),i("span",{class:"lang"},"llvm"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[i("code",{"v-pre":""},[i("span",{class:"line"},[i("span",null,"%a = add i32 %x, %y")]),s(`
`),i("span",{class:"line"},[i("span",null,"%b = add i32 %x, %y")]),s(`
`),i("span",{class:"line"},[i("span",null,"%r = add i32 %a, %b")])])]),i("button",{class:"collapse"})]),i("h3",{id:"gvn-优化后",tabindex:"-1"},[s("GVN 优化后： "),i("a",{class:"header-anchor",href:"#gvn-优化后","aria-label":'Permalink to "GVN 优化后："'},"​")]),i("div",{class:"language-llvm vp-adaptive-theme"},[i("button",{title:"Copy Code",class:"copy"}),i("span",{class:"lang"},"llvm"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[i("code",{"v-pre":""},[i("span",{class:"line"},[i("span",null,"%a = add i32 %x, %y")]),s(`
`),i("span",{class:"line"},[i("span",null,"%r = add i32 %a, %a")])])]),i("button",{class:"collapse"})]),i("p",null,[i("strong",null,"GVN.cpp 实现了全局值编号 (GVN)，用于消除冗余计算和死载入。"),s(" 是 LLVM IR 中经典的 CSE 优化手段，比 DCE、ADCE 覆盖面更广、作用更强。")])],-1),i("h3",{id:"dce-cpp",tabindex:"-1"},[s("DCE.cpp "),i("a",{class:"header-anchor",href:"#dce-cpp","aria-label":'Permalink to "DCE.cpp"'},"​")],-1),i("p",null,[i("strong",null,"Dead Code Elimination (DCE)"),s(" 是编译器中常见的一种优化技术，旨在删除程序中"),i("strong",null,"不会影响最终执行结果的无用指令"),s("。它通过分析程序的"),i("strong",null,"值使用情况和副作用"),s("，识别出既没有被其他指令使用，也不会对程序状态产生影响（如内存写入、函数调用副作用等）的计算和操作，将这些冗余代码安全移除，从而减少程序体积、提升运行效率。DCE 通常作为中后期优化流程中的基础 Pass，为后续优化提供更简洁的中间表示 (IR)。")],-1),i("details",null,[i("summary",null,"代码上的原注释"),i("div",{class:"language-cpp vp-adaptive-theme"},[i("button",{title:"Copy Code",class:"copy"}),i("span",{class:"lang"},"cpp"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[i("code",{"v-pre":""},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//===- DCE.cpp - Code to perform dead code elimination --------------------===//")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// See https://llvm.org/LICENSE.txt for license information.")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//===----------------------------------------------------------------------===//")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// This file implements dead inst elimination and dead code elimination.")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// Dead Inst Elimination performs a single pass over the function removing")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// instructions that are obviously dead.  Dead Code Elimination is similar, but")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// it rechecks instructions that were used by removed instructions to see if")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// they are newly dead.")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//===----------------------------------------------------------------------===//")])])]),i("button",{class:"collapse"})])],-1),i("h3",{id:"adce-cpp",tabindex:"-1"},[s("ADCE.cpp "),i("a",{class:"header-anchor",href:"#adce-cpp","aria-label":'Permalink to "ADCE.cpp"'},"​")],-1),i("p",null,[i("strong",null,"Aggressive Dead Code Elimination (ADCE)"),s(" 是一种比传统 DCE 更激进的死代码删除优化方法。它通过"),i("strong",null,"乐观地假设所有指令都是无用的"),s("，然后从程序中必须执行、有副作用或影响控制流的指令出发，反向分析依赖关系，标记出真正“活跃”的指令，最终删除所有未被标记的死代码。ADCE 能清除一些常规 DCE 无法识别的冗余计算，尤其擅长消除"),i("strong",null,"循环内部或复杂控制流中无影响的计算指令"),s("，有效简化中间表示 (IR)，提高后续优化与生成代码的质量。")],-1),i("details",null,[i("summary",null,"代码上的原注释"),i("div",{class:"language-cpp vp-adaptive-theme"},[i("button",{title:"Copy Code",class:"copy"}),i("span",{class:"lang"},"cpp"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[i("code",{"v-pre":""},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//===- ADCE.cpp - Code to perform dead code elimination -------------------===//")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// See https://llvm.org/LICENSE.txt for license information.")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//===----------------------------------------------------------------------===//")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// This file implements the Aggressive Dead Code Elimination pass.  This pass")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// optimistically assumes that all instructions are dead until proven otherwise,")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// allowing it to eliminate dead computations that other DCE passes do not")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// catch, particularly involving loop computations.")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//===----------------------------------------------------------------------===//")])])]),i("button",{class:"collapse"})])],-1),i("h3",{id:"licm-cpp",tabindex:"-1"},[s("LICM.cpp "),i("a",{class:"header-anchor",href:"#licm-cpp","aria-label":'Permalink to "LICM.cpp"'},"​")],-1),i("p",null,"LICM (Loop Invariant Code Motion) 是 LLVM 中用于循环优化的重要 Pass，主要功能是将循环内每次执行结果相同、且不依赖循环变量的指令移出循环体（hoisting 到 preheader）或延后到循环退出后（sinking 到 exit block），以减少循环内重复计算，提升执行效率。同时，LICM 还能利用别名分析，将在循环内始终访问同一内存地址且无别名冲突的变量提升为寄存器变量，进一步降低内存访问开销。这一优化不仅提升运行时性能，也为后续中端优化简化 IR 结构，提供便利。",-1),i("details",null,[i("summary",null,"代码上的原注释"),i("div",{class:"language-cpp vp-adaptive-theme"},[i("button",{title:"Copy Code",class:"copy"}),i("span",{class:"lang"},"cpp"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[i("code",{"v-pre":""},[i("span",{class:"line"}),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//===-- LICM.cpp - Loop Invariant Code Motion Pass ------------------------===//")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// See https://llvm.org/LICENSE.txt for license information.")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//===----------------------------------------------------------------------===//")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// This pass performs loop invariant code motion, attempting to remove as much")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// code from the body of a loop as possible.  It does this by either hoisting")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// code into the preheader block, or by sinking code to the exit blocks if it is")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// safe.  This pass also promotes must-aliased memory locations in the loop to")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},'// live in registers, thus hoisting and sinking "invariant" loads and stores.')]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// Hoisting operations out of loops is a canonicalization transform.  It")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// enables and simplifies subsequent optimizations in the middle-end.")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// Rematerialization of hoisted instructions to reduce register pressure is the")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// responsibility of the back-end, which has more accurate information about")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// register pressure and also handles other optimizations than LICM that")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// increase live-ranges.")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// This pass uses alias analysis for two purposes:")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//  1. Moving loop invariant loads and calls out of loops.  If we can determine")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//     that a load or call inside of a loop never aliases anything stored to,")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//     we can hoist it or sink it like any other instruction.")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//  2. Scalar Promotion of Memory - If there is a store instruction inside of")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//     the loop, we try to move the store to happen AFTER the loop instead of")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//     inside of the loop.  This can only happen if a few conditions are true:")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//       A. The pointer stored through is loop invariant")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//       B. There are no stores or loads in the loop which _may_ alias the")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//          pointer.  There are no calls in the loop which mod/ref the pointer.")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//     If these conditions are true, we can promote the loads and stores in the")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//     loop of the pointer to use a temporary alloca'd variable.  We then use")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//     the SSAUpdater to construct the appropriate SSA form for the value.")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//===----------------------------------------------------------------------===//")])])]),i("button",{class:"collapse"})])],-1),i("details",null,[i("summary",null,"原理简单概括"),i("h3",{id:"这个-pass-实现了-1",tabindex:"-1"},[s("这个 Pass 实现了： "),i("a",{class:"header-anchor",href:"#这个-pass-实现了-1","aria-label":'Permalink to "这个 Pass 实现了："'},"​")]),i("p",null,[i("strong",null,"循环不变代码外提（Loop Invariant Code Motion, LICM）")]),i("h3",{id:"它做什么",tabindex:"-1"},[s("它做什么？ "),i("a",{class:"header-anchor",href:"#它做什么","aria-label":'Permalink to "它做什么？"'},"​")]),i("p",null,[i("strong",null,"把循环里不依赖循环变量、每次执行结果一样的指令"),s("：")]),i("ul",null,[i("li",null,[i("strong",null,"提到循环前"),s("（preheader block）执行，称为 "),i("strong",null,"hoisting")]),i("li",null,[s("或者"),i("strong",null,"延后到循环退出后执行"),s("，称为 "),i("strong",null,"sinking")])]),i("p",null,"这样可以避免不必要的重复计算，提升性能。"),i("h3",{id:"还能做",tabindex:"-1"},[s("还能做： "),i("a",{class:"header-anchor",href:"#还能做","aria-label":'Permalink to "还能做："'},"​")]),i("p",null,[i("strong",null,"内存标量化（Scalar Promotion）")]),i("ul",null,[i("li",null,[s("如果一个循环内对某个地址（如 "),i("code",null,"a[i]"),s("）的 "),i("code",null,"load/store"),s(" 没有其他指令会改动或者冲突（alias）")]),i("li",null,"那么就可以把它变成寄存器变量，提升效率")]),i("h3",{id:"为什么重要",tabindex:"-1"},[s("为什么重要？ "),i("a",{class:"header-anchor",href:"#为什么重要","aria-label":'Permalink to "为什么重要？"'},"​")]),i("ul",null,[i("li",null,[i("p",null,[i("strong",null,"循环不变代码外提"),s(" 是编译器优化的基础手段之一，几乎所有优化器都会做")])]),i("li",null,[i("p",null,"它能简化后续优化过程，比如："),i("ul",null,[i("li",null,"让 GVN、DCE 更容易发现冗余代码"),i("li",null,"减少循环体内指令数量，提升执行速度")])])]),i("h3",{id:"用到的分析",tabindex:"-1"},[s("用到的分析： "),i("a",{class:"header-anchor",href:"#用到的分析","aria-label":'Permalink to "用到的分析："'},"​")]),i("ul",null,[i("li",null,[i("p",null,[i("strong",null,"别名分析（Alias Analysis）")]),i("ul",null,[i("li",null,"判断内存访问是否可能冲突，保证提取/延后不会影响程序语义")])])]),i("h2",{id:"举个例子",tabindex:"-1"},[s("举个例子： "),i("a",{class:"header-anchor",href:"#举个例子","aria-label":'Permalink to "举个例子："'},"​")]),i("h3",{id:"优化前-1",tabindex:"-1"},[s("优化前： "),i("a",{class:"header-anchor",href:"#优化前-1","aria-label":'Permalink to "优化前："'},"​")]),i("div",{class:"language-llvm vp-adaptive-theme"},[i("button",{title:"Copy Code",class:"copy"}),i("span",{class:"lang"},"llvm"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[i("code",{"v-pre":""},[i("span",{class:"line"},[i("span",null,"for (int i = 0; i < N; ++i) {")]),s(`
`),i("span",{class:"line"},[i("span",null,"  y = a + b;  // 每次循环结果一样，没必要放里面")]),s(`
`),i("span",{class:"line"},[i("span",null,"  sum += y * A[i];")]),s(`
`),i("span",{class:"line"},[i("span",null,"}")])])]),i("button",{class:"collapse"})]),i("h3",{id:"licm-优化后",tabindex:"-1"},[s("LICM 优化后： "),i("a",{class:"header-anchor",href:"#licm-优化后","aria-label":'Permalink to "LICM 优化后："'},"​")]),i("div",{class:"language-llvm vp-adaptive-theme"},[i("button",{title:"Copy Code",class:"copy"}),i("span",{class:"lang"},"llvm"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[i("code",{"v-pre":""},[i("span",{class:"line"},[i("span",null,"y = a + b;")]),s(`
`),i("span",{class:"line"},[i("span",null,"for (int i = 0; i < N; ++i) {")]),s(`
`),i("span",{class:"line"},[i("span",null,"  sum += y * A[i];")]),s(`
`),i("span",{class:"line"},[i("span",null,"}")])])]),i("button",{class:"collapse"})]),i("h2",{id:"命令行调用",tabindex:"-1"},[s("命令行调用： "),i("a",{class:"header-anchor",href:"#命令行调用","aria-label":'Permalink to "命令行调用："'},"​")]),i("div",{class:"language-bash vp-adaptive-theme"},[i("button",{title:"Copy Code",class:"copy"}),i("span",{class:"lang"},"bash"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[i("code",{"v-pre":""},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"opt"),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," -licm"),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," -S"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," input.ll"),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," -o"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," output.ll")])])]),i("button",{class:"collapse"})]),i("h2",{id:"总结一句",tabindex:"-1"},[s("总结一句： "),i("a",{class:"header-anchor",href:"#总结一句","aria-label":'Permalink to "总结一句："'},"​")]),i("p",null,[i("strong",null,"LICM 是一种经典的循环优化手段，将循环内不依赖循环变量、结果固定的计算提前或延后执行，从而减少循环体开销，提升性能。")])],-1),i("h3",{id:"loopunroll-cpp",tabindex:"-1"},[s("LoopUnroll.cpp "),i("a",{class:"header-anchor",href:"#loopunroll-cpp","aria-label":'Permalink to "LoopUnroll.cpp"'},"​")],-1),i("p",null,[s("一种常见优化手段，通过把循环体复制多份，减少循环控制开销（比如 "),i("code",null,"for"),s(" 计数和判断）以及增加指令级并行性，提高执行效率。")],-1),i("details",null,[i("summary",null,"代码"),i("div",{class:"language-cpp vp-adaptive-theme"},[i("button",{title:"Copy Code",class:"copy"}),i("span",{class:"lang"},"cpp"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[i("code",{"v-pre":""},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//===- LoopUnroll.cpp - Code to perform loop unrolling --------------------===//")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// See https://llvm.org/LICENSE.txt for license information.")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//===----------------------------------------------------------------------===//")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// This file implements loop unrolling.")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// 本文件实现了循环展开（Loop Unrolling）功能。")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//===----------------------------------------------------------------------===//")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"#include"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},' "PassDetail.h"')]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"#include"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},' "mlir/Analysis/LoopAnalysis.h"')]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"#include"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},' "mlir/Dialect/Affine/IR/AffineOps.h"')]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"#include"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},' "mlir/Dialect/Affine/Passes.h"')]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"#include"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},' "mlir/IR/AffineExpr.h"')]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"#include"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},' "mlir/IR/AffineMap.h"')]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"#include"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},' "mlir/IR/Builders.h"')]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"#include"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},' "mlir/Transforms/LoopUtils.h"')]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"#include"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},' "llvm/ADT/DenseMap.h"')]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"#include"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},' "llvm/Support/CommandLine.h"')]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"#include"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},' "llvm/Support/Debug.h"')]),s(`
`),i("span",{class:"line"}),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"using"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," namespace"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," mlir"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},";")]),s(`
`),i("span",{class:"line"}),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"#define"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," DEBUG_TYPE"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},' "affine-loop-unroll"')]),s(`
`),i("span",{class:"line"}),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"namespace"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {")]),s(`
`),i("span",{class:"line"}),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// TODO: this is really a test pass and should be moved out of dialect")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// transforms.")]),s(`
`),i("span",{class:"line"}),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"/// Loop unrolling pass. Unrolls all innermost loops unless full unrolling and a")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"/// full unroll threshold was specified, in which case, fully unrolls all loops")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"/// with trip count less than the specified threshold. The latter is for testing")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"/// purposes, especially for testing outer loop unrolling.")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"struct"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," LoopUnroll"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," : "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"public"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," AffineLoopUnrollBase"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"<"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"LoopUnroll"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"> {")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"  // Callback to obtain unroll factors; if this has a callable target, takes")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"  // precedence over command-line argument or passed argument.")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"  const"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," std"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"::function"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"<unsigned"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(AffineForOp)"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},">"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," getUnrollFactor;")]),s(`
`),i("span",{class:"line"}),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"  LoopUnroll"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"() : "),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"getUnrollFactor"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"nullptr"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},") {}")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"  LoopUnroll"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"const"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," LoopUnroll"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," &"),i("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"other"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"      : "),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"AffineLoopUnrollBase"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"<"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"LoopUnroll"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},">(other),")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"        getUnrollFactor"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(other.getUnrollFactor) {}")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"  explicit"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," LoopUnroll"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"      Optional"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"<"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"unsigned"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"> "),i("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"unrollFactor"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," ="),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," None, "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"bool"),i("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}}," unrollUpToFactor"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," ="),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," false"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},",")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"      bool"),i("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}}," unrollFull"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," ="),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," false"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},",")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"      const"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," std"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"::"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"function"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"<"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"unsigned"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"AffineForOp"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")> "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"&"),i("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"getUnrollFactor"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," ="),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," nullptr"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"      : "),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"getUnrollFactor"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(getUnrollFactor) {")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"    if"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," (unrollFactor)")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"      this"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"->unrollFactor "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," *"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"unrollFactor;")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"    this"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"->unrollUpToFactor "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," unrollUpToFactor;")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"    this"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"->unrollFull "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," unrollFull;")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  }")]),s(`
`),i("span",{class:"line"}),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"  void"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," runOnFunction"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"() "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"override"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},";")]),s(`
`),i("span",{class:"line"}),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"  /// Unroll this for op. Returns failure if nothing was done.")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"  LogicalResult"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," runOnAffineForOp"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"AffineForOp"),i("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}}," forOp"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},");")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"};")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}"),i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}}," // end anonymous namespace")]),s(`
`),i("span",{class:"line"}),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"/// Returns true if no other affine.for ops are nested within.")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"static"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," bool"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," isInnermostAffineForOp"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"AffineForOp"),i("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}}," forOp"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},") {")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"  // Only for the innermost affine.for op's.")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"  bool"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," isInnermost "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," true"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},";")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  forOp."),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"walk"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(["),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"&"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"]("),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"AffineForOp"),i("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}}," thisForOp"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},") {")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"    // Since this is a post order walk, we are able to conclude here.")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    isInnermost "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," (thisForOp "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"=="),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," forOp);")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"    return"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," WalkResult"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"::"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"interrupt"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"();")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  });")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"  return"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," isInnermost;")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")]),s(`
`),i("span",{class:"line"}),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"/// Gathers loops that have no affine.for's nested within.")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"static"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," void"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," gatherInnermostLoops"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"FuncOp"),i("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}}," f"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},",")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"                                 SmallVectorImpl"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"<"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"AffineForOp"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"> "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"&"),i("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"loops"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},") {")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  f."),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"walk"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(["),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"&"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"]("),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"AffineForOp"),i("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}}," forOp"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},") {")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"    if"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," ("),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"isInnermostAffineForOp"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(forOp))")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"      loops."),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"push_back"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(forOp);")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  });")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")]),s(`
`),i("span",{class:"line"}),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"void"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," LoopUnroll"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"::"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"runOnFunction"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"() {")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"  if"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," (unrollFull "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"&&"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," unrollFullThreshold."),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"hasValue"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"()) {")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"    // Store short loops as we walk.")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    SmallVector"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"<"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"AffineForOp, "),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"4"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},">"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," loops;")]),s(`
`),i("span",{class:"line"}),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"    // Gathers all loops with trip count <= minTripCount. Do a post order walk")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"    // so that loops are gathered from innermost to outermost (or else unrolling")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"    // an outer one may delete gathered inner ones).")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"    getFunction"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"()."),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"walk"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(["),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"&"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"]("),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"AffineForOp"),i("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}}," forOp"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},") {")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"      Optional"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"<uint64_t>"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," tripCount "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," getConstantTripCount"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(forOp);")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"      if"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," (tripCount."),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"hasValue"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"() "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"&&"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," tripCount."),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"getValue"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"() "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"<="),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," unrollFullThreshold)")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        loops."),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"push_back"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(forOp);")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    });")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"    for"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," ("),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"auto"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," forOp : loops)")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"      ("),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"void"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"loopUnrollFull"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(forOp);")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"    return"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},";")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  }")]),s(`
`),i("span",{class:"line"}),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"  // If the call back is provided, we will recurse until no loops are found.")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  FuncOp func "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," getFunction"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"();")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  SmallVector"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"<"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"AffineForOp, "),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"4"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},">"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," loops;")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"  for"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," ("),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"unsigned"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," i "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," 0"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"; i "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"<"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," numRepetitions "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"||"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," getUnrollFactor; i"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"++"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},") {")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    loops."),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"clear"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"();")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"    gatherInnermostLoops"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(func, loops);")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"    if"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," (loops."),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"empty"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"())")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"      break"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},";")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"    bool"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," unrolled "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," false"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},";")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"    for"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," ("),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"auto"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," forOp : loops)")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"      unrolled "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"|="),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," succeeded"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"runOnAffineForOp"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(forOp));")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"    if"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," ("),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"!"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"unrolled)")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"      // Break out if nothing was unrolled.")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"      break"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},";")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  }")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")]),s(`
`),i("span",{class:"line"}),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"/// Unrolls a 'affine.for' op. Returns success if the loop was unrolled,")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"/// failure otherwise. The default unroll factor is 4.")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"LogicalResult"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," LoopUnroll"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"::"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"runOnAffineForOp"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"AffineForOp"),i("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}}," forOp"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},") {")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"  // Use the function callback if one was provided.")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"  if"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," (getUnrollFactor)")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"    return"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," loopUnrollByFactor"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(forOp, "),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"getUnrollFactor"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(forOp));")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"  // Unroll completely if full loop unroll was specified.")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"  if"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," (unrollFull)")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"    return"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," loopUnrollFull"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(forOp);")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"  // Otherwise, unroll by the given unroll factor.")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"  if"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," (unrollUpToFactor)")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"    return"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," loopUnrollUpToFactor"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(forOp, unrollFactor);")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"  return"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," loopUnrollByFactor"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(forOp, unrollFactor);")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")]),s(`
`),i("span",{class:"line"}),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"std"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"::"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"unique_ptr"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"<"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"OperationPass"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"<"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"FuncOp"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},">> "),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"mlir"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"::"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"createLoopUnrollPass"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"    int"),i("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}}," unrollFactor"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"bool"),i("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}}," unrollUpToFactor"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"bool"),i("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}}," unrollFull"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},",")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"    const"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," std"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"::"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"function"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"<"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"unsigned"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"AffineForOp"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")> "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"&"),i("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"getUnrollFactor"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},") {")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"  return"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," std"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"::"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"make_unique"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"<"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"LoopUnroll"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},">(")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"      unrollFactor "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"=="),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," -"),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"1"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," ?"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," None "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},":"),i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," Optional"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"<"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"unsigned"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},">(unrollFactor),")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"      unrollUpToFactor, unrollFull, getUnrollFactor);")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])]),i("button",{class:"collapse"})])],-1),i("details",null,[i("summary",null,"原理"),i("p",null,[s("这段是 "),i("strong",null,"MLIR（Multi-Level IR）里的 LoopUnroll.cpp"),s("，它实现了一个"),i("strong",null,"循环展开（Loop Unrolling）Pass"),s("。")]),i("h3",{id:"它是干什么的",tabindex:"-1"},[s("它是干什么的： "),i("a",{class:"header-anchor",href:"#它是干什么的","aria-label":'Permalink to "它是干什么的："'},"​")]),i("ul",null,[i("li",null,[i("p",null,[s("**循环展开（Loop Unrolling）**是一种常见优化手段，通过把循环体复制多份，减少循环控制开销（比如 "),i("code",null,"for"),s(" 计数和判断）以及增加指令级并行性，提高执行效率。")])]),i("li",null,[i("p",null,"这个 Pass 会："),i("ul",null,[i("li",null,[s("找出 "),i("strong",null,"AffineForOp"),s("（MLIR 中的 affine 版本 for 循环）")]),i("li",null,[s("判断是否是"),i("strong",null,"最内层循环")]),i("li",null,[s("按设定好的 "),i("strong",null,"展开因子（unroll factor）"),s("，或者直接"),i("strong",null,"完全展开"),s("（full unroll），把循环体复制对应次数")]),i("li",null,"支持用户提供 callback，动态决定不同循环的展开因子")])])]),i("h3",{id:"它的特点",tabindex:"-1"},[s("它的特点： "),i("a",{class:"header-anchor",href:"#它的特点","aria-label":'Permalink to "它的特点："'},"​")]),i("ul",null,[i("li",null,[i("p",null,[s("专门面向 "),i("strong",null,"Affine dialect"),s("，针对 "),i("code",null,"affine.for"),s(" 语句操作")])]),i("li",null,[i("p",null,"可以设定："),i("ul",null,[i("li",null,"固定展开因子（默认 4）"),i("li",null,"“尽量展开到多少倍”"),i("li",null,"或“完全展开”（当循环次数是常量，且小于给定阈值）")])]),i("li",null,[i("p",null,"支持递归多轮展开")]),i("li",null,[i("p",null,[s("用到了 MLIR 的 "),i("code",null,"walk"),s(" 和 "),i("code",null,"post order walk"),s("，按从内到外的顺序收集、处理循环，避免展开外层导致内层循环消失")])])]),i("h3",{id:"📖-总结一句",tabindex:"-1"},[s("📖 总结一句： "),i("a",{class:"header-anchor",href:"#📖-总结一句","aria-label":'Permalink to "📖 总结一句："'},"​")]),i("p",null,[i("strong",null,"LoopUnroll.cpp"),s(" 实现了 MLIR 中 affine 循环的展开优化，可以通过设定因子、阈值或回调方式灵活控制展开策略，减少循环开销、提高并行度，是 affine dialect 优化的重要中端 pass。")])],-1),i("h3",{id:"jumpthreading-cpp",tabindex:"-1"},[s("JumpThreading.cpp "),i("a",{class:"header-anchor",href:"#jumpthreading-cpp","aria-label":'Permalink to "JumpThreading.cpp"'},"​")],-1),i("p",null,"是一种中端控制流优化技术，简单说就是：",-1),i("p",null,"在编译时，根据条件分支的已知路径，提前将某些跳转直接连起来，消除不必要的中间基本块，优化 CFG（Control Flow Graph），提升执行效率。",-1),i("details",null,[i("summary",null,"注释"),i("div",{class:"language-cpp vp-adaptive-theme"},[i("button",{title:"Copy Code",class:"copy"}),i("span",{class:"lang"},"cpp"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[i("code",{"v-pre":""},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//===- JumpThreading.cpp - Thread control through conditional blocks ------===//")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// See https://llvm.org/LICENSE.txt for license information.")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//===----------------------------------------------------------------------===//")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// This file implements the Jump Threading pass.")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//===----------------------------------------------------------------------===//")])])]),i("button",{class:"collapse"})])],-1),i("details",null,[i("summary",null,"具体原理"),i("h2",{id:"什么是-jump-threading",tabindex:"-1"},[s("什么是 Jump Threading？ "),i("a",{class:"header-anchor",href:"#什么是-jump-threading","aria-label":'Permalink to "什么是 Jump Threading？"'},"​")]),i("p",null,[i("strong",null,"Jump Threading"),s(" 是一种"),i("strong",null,"控制流图（CFG）优化技术"),s("，用于在编译中消除多余的中间分支跳转路径，优化执行路径，提高性能。")]),i("p",null,"它的核心思想是："),i("ul",null,[i("li",null,[s("如果程序中某个"),i("strong",null,"条件分支的结果可以根据已有的信息提前确定"),s("，就直接“穿线”（thread）过去，跳过无用的中间基本块，连通最终目标。")])]),i("h2",{id:"举个直观的例子",tabindex:"-1"},[s("举个直观的例子： "),i("a",{class:"header-anchor",href:"#举个直观的例子","aria-label":'Permalink to "举个直观的例子："'},"​")]),i("p",null,"假如你有这样一段伪代码："),i("div",{class:"language-c vp-adaptive-theme"},[i("button",{title:"Copy Code",class:"copy"}),i("span",{class:"lang"},"c"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[i("code",{"v-pre":""},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"if"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," (A) {")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"  if"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," (A) {")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"    do_something"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"();")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  }")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])]),i("button",{class:"collapse"})]),i("p",null,"编译成控制流图可能是："),i("div",{class:"language- vp-adaptive-theme"},[i("button",{title:"Copy Code",class:"copy"}),i("span",{class:"lang"}),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[i("code",{"v-pre":""},[i("span",{class:"line"},[i("span",null,"Block0")]),s(`
`),i("span",{class:"line"},[i("span",null,"  |")]),s(`
`),i("span",{class:"line"},[i("span",null,"  v")]),s(`
`),i("span",{class:"line"},[i("span",null," Block1 (if A)")]),s(`
`),i("span",{class:"line"},[i("span",null,"  |    |")]),s(`
`),i("span",{class:"line"},[i("span",null,"  v    v")]),s(`
`),i("span",{class:"line"},[i("span",null," B2   Block3 (if A again)")]),s(`
`),i("span",{class:"line"},[i("span",null,"         |    |")]),s(`
`),i("span",{class:"line"},[i("span",null,"         v    v")]),s(`
`),i("span",{class:"line"},[i("span",null,"      B4     B5")])])]),i("button",{class:"collapse"})]),i("p",null,"你会发现："),i("ul",null,[i("li",null,[s("如果 "),i("code",null,"Block1"),s(" 条件已经判断 "),i("code",null,"A"),s("，到了 "),i("code",null,"Block3"),s(" 再判断 "),i("code",null,"A"),s(" 是"),i("strong",null,"冗余的"),s("。")]),i("li",null,[i("strong",null,"Jump Threading"),s(" 就会“穿线”过去，把 "),i("code",null,"Block1"),s(" 中判断 "),i("code",null,"A"),s(" 为 true 的跳转直接连到 "),i("code",null,"do_something()"),s("，消除掉 "),i("code",null,"Block3"),s("。")])]),i("h2",{id:"它是怎么做的",tabindex:"-1"},[s("它是怎么做的？ "),i("a",{class:"header-anchor",href:"#它是怎么做的","aria-label":'Permalink to "它是怎么做的？"'},"​")]),i("p",null,"Jump Threading 的常见步骤："),i("ol",null,[i("li",null,[i("p",null,[i("strong",null,"分析条件分支的值传播")]),i("ul",null,[i("li",null,"看看能不能根据已有路径上的条件，推断某个分支条件的值。")])]),i("li",null,[i("p",null,[i("strong",null,"确定冗余跳转")]),i("ul",null,[i("li",null,"找到那些条件判断可以提前确定的路径。")])]),i("li",null,[i("p",null,[i("strong",null,"修改控制流图")]),i("ul",null,[i("li",null,"重定向跳转，消除中间块，或者直接合并基本块，简化 CFG。")])]),i("li",null,[i("p",null,[i("strong",null,"更新 PHI 节点")]),i("ul",null,[i("li",null,"由于路径变化，PHI 节点可能要重新调整。")])])]),i("h2",{id:"举个-llvm-中的典型应用",tabindex:"-1"},[s("举个 LLVM 中的典型应用： "),i("a",{class:"header-anchor",href:"#举个-llvm-中的典型应用","aria-label":'Permalink to "举个 LLVM 中的典型应用："'},"​")]),i("p",null,"比如 LLVM IR 中："),i("div",{class:"language-llvm vp-adaptive-theme"},[i("button",{title:"Copy Code",class:"copy"}),i("span",{class:"lang"},"llvm"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[i("code",{"v-pre":""},[i("span",{class:"line"},[i("span",null,"%cmp = icmp eq i32 %a, 0")]),s(`
`),i("span",{class:"line"},[i("span",null,"br i1 %cmp, label %if.then, label %if.else")]),s(`
`),i("span",{class:"line"},[i("span")]),s(`
`),i("span",{class:"line"},[i("span",null,"if.then:")]),s(`
`),i("span",{class:"line"},[i("span",null,"  %cmp2 = icmp eq i32 %a, 0")]),s(`
`),i("span",{class:"line"},[i("span",null,"  br i1 %cmp2, label %foo, label %bar")])])]),i("button",{class:"collapse"})]),i("p",null,[s("这里 "),i("code",null,"%cmp2"),s(" 判断的和 "),i("code",null,"%cmp"),s(" 完全一样。 "),i("strong",null,"Jump Threading"),s(" 会把 "),i("code",null,"if.then"),s(" 中对 "),i("code",null,"%cmp2"),s(" 的判断提前确定成 true，直接跳到 "),i("code",null,"%foo"),s("。")]),i("h2",{id:"优化效果",tabindex:"-1"},[s("优化效果： "),i("a",{class:"header-anchor",href:"#优化效果","aria-label":'Permalink to "优化效果："'},"​")]),i("ul",null,[i("li",null,"减少基本块数量"),i("li",null,"缩短分支预测路径"),i("li",null,"提高分支命中率"),i("li",null,"简化控制流，利好后续像 LICM、ADCE、DCE、GVN 等优化")]),i("h2",{id:"总结一句-1",tabindex:"-1"},[s("总结一句： "),i("a",{class:"header-anchor",href:"#总结一句-1","aria-label":'Permalink to "总结一句："'},"​")]),i("blockquote",null,[i("p",null,[i("strong",null,"Jump Threading = 利用已知条件，提前确定跳转路径，穿线优化控制流")])])],-1),i("h3",{id:"slpvectorizer-cpp",tabindex:"-1"},[s("SLPVectorizer.cpp "),i("a",{class:"header-anchor",href:"#slpvectorizer-cpp","aria-label":'Permalink to "SLPVectorizer.cpp"'},"​")],-1),i("p",null,"这是 LLVM 中一个非常重要的矢量化 pass，叫 SLP Vectorizer。",-1),i("p",null,"SLP（Superword Level Parallelism） 是一种在单个基本块内，检测可以并行执行的独立操作，然后将它们组合成 SIMD 向量操作的技术。",-1),i("p",null,"与 Loop Vectorizer 专门优化循环不同，SLP Vectorizer 主要在基本块范围内（BB-level）做向量化，对例如连续 store、load、加法、乘法等语句，找出它们的数据依赖关系，组建成树，最终把这些操作变成单条 SIMD 指令执行。",-1),i("details",null,[i("summary",null,"注释"),i("div",{class:"language-cpp vp-adaptive-theme"},[i("button",{title:"Copy Code",class:"copy"}),i("span",{class:"lang"},"cpp"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[i("code",{"v-pre":""},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//===- SLPVectorizer.cpp - A bottom up SLP Vectorizer ---------------------===//")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// See https://llvm.org/LICENSE.txt for license information.")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//===----------------------------------------------------------------------===//")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// This pass implements the Bottom Up SLP vectorizer. It detects consecutive")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// stores that can be put together into vector-stores. Next, it attempts to")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// construct vectorizable tree using the use-def chains. If a profitable tree")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// was found, the SLP vectorizer performs vectorization on the tree.")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// The pass is inspired by the work described in the paper:")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},'//  "Loop-Aware SLP in GCC" by Ira Rosen, Dorit Nuzman, Ayal Zaks.')]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//===----------------------------------------------------------------------===//")]),s(`
`),i("span",{class:"line"}),s(`
`),i("span",{class:"line"}),s(`
`),i("span",{class:"line"}),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// 这个 pass 实现了**自底向上（Bottom Up）的 SLP（Superword Level Parallelism）矢量化器**。")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// 它会检测可以组合成向量化存储操作（vector-store）的连续 store 指令。")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// 接着，它尝试基于 use-def 链（使用-定义关系）构建一棵可向量化的运算树。")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// 如果发现一棵具有优化价值的运算树，SLP Vectorizer 就会对其进行矢量化转换。")])])]),i("button",{class:"collapse"})])],-1),i("details",null,[i("summary",null,"做法"),i("h3",{id:"它怎么做",tabindex:"-1"},[s("它怎么做？ "),i("a",{class:"header-anchor",href:"#它怎么做","aria-label":'Permalink to "它怎么做？"'},"​")]),i("p",null,"大致流程："),i("ol",null,[i("li",null,[i("p",null,[i("strong",null,"检测连续 store / load")]),i("ul",null,[i("li",null,"找出内存地址连续、类型相同的操作。")])]),i("li",null,[i("p",null,[i("strong",null,"通过 use-def 链构建向量化树")]),i("ul",null,[i("li",null,"顺着变量的使用-定义关系，向上递归构建一棵运算树，看看有哪些操作可以一起向量化。")])]),i("li",null,[i("p",null,[i("strong",null,"计算收益（Cost Model）")]),i("ul",null,[i("li",null,"判断向量化后是否性能更优。")])]),i("li",null,[i("p",null,[i("strong",null,"如果收益可观，就执行矢量化")]),i("ul",null,[i("li",null,"将多个标量操作组合成一条或多条 SIMD 指令。")])])]),i("h3",{id:"举个例子-1",tabindex:"-1"},[s("举个例子 "),i("a",{class:"header-anchor",href:"#举个例子-1","aria-label":'Permalink to "举个例子"'},"​")]),i("p",null,"比如："),i("div",{class:"language-c vp-adaptive-theme"},[i("button",{title:"Copy Code",class:"copy"}),i("span",{class:"lang"},"c"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[i("code",{"v-pre":""},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"a"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"[i] "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),i("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}}," b"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"[i] "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"+"),i("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}}," c"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"[i];")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"a"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"[i"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"+"),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"1"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"] "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),i("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}}," b"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"[i"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"+"),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"1"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"] "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"+"),i("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}}," c"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"[i"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"+"),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"1"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"];")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"a"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"[i"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"+"),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"2"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"] "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),i("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}}," b"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"[i"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"+"),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"2"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"] "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"+"),i("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}}," c"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"[i"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"+"),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"2"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"];")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"a"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"[i"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"+"),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"3"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"] "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),i("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}}," b"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"[i"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"+"),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"3"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"] "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"+"),i("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}}," c"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"[i"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"+"),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"3"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"];")])])]),i("button",{class:"collapse"})]),i("p",null,[s("原本 4 次加法 + 4 次 store。 SLP Vectorizer 能把 4 次加法拼成一条 "),i("code",null,"vector_add"),s("，4 次 store 合并成 "),i("code",null,"vector_store"),s("。")])],-1),i("h3",{id:"globaldce-cpp",tabindex:"-1"},[s("GlobalDCE.cpp "),i("a",{class:"header-anchor",href:"#globaldce-cpp","aria-label":'Permalink to "GlobalDCE.cpp"'},"​")],-1),i("p",null,[s("这是 LLVM 中的 "),i("strong",null,"全局死代码删除（Global Dead Code Elimination, GlobalDCE）"),s(" pass， 它会删除那些：")],-1),i("ul",null,[i("li",null,[i("strong",null,"作用域为 internal（例如 static 或未导出符号）")]),i("li",null,[i("strong",null,"且不可达"),s("（没有被任何其他可达代码使用到）的全局变量、全局函数、常量等。")])],-1),i("p",null,"它的作用就是清理程序中完全无用的全局定义，减少最终程序体积，提高效率。",-1),i("details",null,[i("summary",null,"注释"),i("div",{class:"language-cpp vp-adaptive-theme"},[i("button",{title:"Copy Code",class:"copy"}),i("span",{class:"lang"},"cpp"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[i("code",{"v-pre":""},[i("span",{class:"line"}),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//===-- GlobalDCE.cpp - DCE unreachable internal functions ----------------===//")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// See https://llvm.org/LICENSE.txt for license information.")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//===----------------------------------------------------------------------===//")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// This transform is designed to eliminate unreachable internal globals from the")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// program.  It uses an aggressive algorithm, searching out globals that are")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// known to be alive.  After it finds all of the globals which are needed, it")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// deletes whatever is left over.  This allows it to delete recursive chunks of")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// the program which are unreachable.")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//===----------------------------------------------------------------------===//")])])]),i("button",{class:"collapse"})]),i("div",{class:"language-cpp vp-adaptive-theme"},[i("button",{title:"Copy Code",class:"copy"}),i("span",{class:"lang"},"cpp"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[i("code",{"v-pre":""},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//===-- GlobalDCE.cpp - 删除不可达的内部全局对象 ----------------===//")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// 本文件属于 LLVM 项目，遵循 Apache License v2.0 和 LLVM 特别条款。")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// 许可证信息见：https://llvm.org/LICENSE.txt")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//===----------------------------------------------------------------------===//")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// 这个优化变换（transform）用于**删除程序中不可达的内部全局对象（internal globals）**。  ")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// 它采用一种激进的策略：首先找出所有“已知存活（alive）”的全局对象，  ")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// 然后删除所有剩余的未被引用、不可达的全局对象。  ")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// 这种方法甚至可以删除那些相互递归但整体不可达的程序片段。")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//===----------------------------------------------------------------------===//")])])]),i("button",{class:"collapse"})])],-1),i("details",null,[i("summary",null,"流程"),s(" 对每个已知存活的全局对象，检查它引用的其他全局符号， 如果发现新引用的内部全局对象，也标记为存活，继续递归遍历。 ")],-1),i("h3",{id:"inliner-cpp",tabindex:"-1"},[s("Inliner.cpp "),i("a",{class:"header-anchor",href:"#inliner-cpp","aria-label":'Permalink to "Inliner.cpp"'},"​")],-1),i("p",null,"把一个函数的调用点，替换成该函数的函数体代码，从而消除函数调用开销，增加后续优化空间。",-1),i("details",null,[i("summary",null,"注释"),i("div",{class:"language-cpp vp-adaptive-theme"},[i("button",{title:"Copy Code",class:"copy"}),i("span",{class:"lang"},"cpp"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[i("code",{"v-pre":""},[i("span",{class:"line"}),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//===- Inliner.cpp - Pass to inline function calls ------------------------===//")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// See https://llvm.org/LICENSE.txt for license information.")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//===----------------------------------------------------------------------===//")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// This file implements a basic inlining algorithm that operates bottom up over")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// the Strongly Connect Components(SCCs) of the CallGraph. This enables a more")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// incremental propagation of inlining decisions from the leafs to the roots of")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// the callgraph.")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//===----------------------------------------------------------------------===//")])])]),i("button",{class:"collapse"})])],-1),i("details",null,[i("summary",null,"做法"),i("ul",null,[i("li",null,[i("p",null,[i("strong",null,"自底向上遍历调用图的 SCC"),s("：")]),i("ul",null,[i("li",null,"先处理调用图中没有调用其他函数的叶子函数"),i("li",null,"再逐渐向上传播内联决策"),i("li",null,"强连通分量（SCC）指的是调用图中相互递归调用的函数集合，SCC 内联顺序很重要，避免递归死循环")])]),i("li",null,[i("p",null,[i("strong",null,"增量式传播优化效果"),s(" 内联后的函数可能变得“内联友好”，便于继续向上内联")])])])],-1),i("h3",{id:"sroa-cpp",tabindex:"-1"},[s("SROA.cpp "),i("a",{class:"header-anchor",href:"#sroa-cpp","aria-label":'Permalink to "SROA.cpp"'},"​")],-1),i("p",null,"SROA 是 LLVM 中一种把结构体/数组内存分配拆成寄存器变量的优化 pass，通过提升局部变量，减少内存访问，优化性能，同时也便于后续 SSA 形式的优化。",-1),i("details",null,[i("summary",null,"注释"),i("div",{class:"language-cpp vp-adaptive-theme"},[i("button",{title:"Copy Code",class:"copy"}),i("span",{class:"lang"},"cpp"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[i("code",{"v-pre":""},[i("span",{class:"line"}),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//===- SROA.cpp - 聚合类型标量替换（Scalar Replacement Of Aggregates）---===//")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// 本文件实现了著名的聚合类型标量替换（SROA）优化。")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// 它尝试识别一个 aggregate alloca（聚合类型内存分配）中可以被提升（promote）到寄存器的元素，")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// 并将它们替换为寄存器中的标量变量。")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// 如果合适，它还会尝试将某些元素或元素集合，转换成向量或位域风格的整数标量。")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// 这个 pass 尽量避免对 alloca 内存区域做无意义的拆分，")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// 保持那些仅仅在内存和外部地址间转移的内存块不被拆解成标量代码。")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// 由于这个 pass 同时也执行 alloca 提升（promote），可以看作是帮助完成")]),s(`
`),i("span",{class:"line"}),s(`
`),i("span",{class:"line"}),s(`
`),i("span",{class:"line"}),s(`
`),i("span",{class:"line"}),s(`
`),i("span",{class:"line"}),s(`
`),i("span",{class:"line"}),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//===- SROA.cpp - Scalar Replacement Of Aggregates ------------------------===//")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// See https://llvm.org/LICENSE.txt for license information.")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//===----------------------------------------------------------------------===//")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"/// "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"\\file")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"/// This transformation implements the well known scalar replacement of")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"/// aggregates transformation. It tries to identify promotable elements of an")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"/// aggregate alloca, and promote them to registers. It will also try to")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"/// convert uses of an element (or set of elements) of an alloca into a vector")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"/// or bitfield-style integer scalar if appropriate.")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"///")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"/// It works to do this with minimal slicing of the alloca so that regions")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"/// which are merely transferred in and out of external memory remain unchanged")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"/// and are not decomposed to scalar code.")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"///")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"/// Because this also performs alloca promotion, it can be thought of as also")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"/// serving the purpose of SSA formation. The algorithm iterates on the")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"/// function until all opportunities for promotion have been realized.")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"///")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"//===----------------------------------------------------------------------===//")])])]),i("button",{class:"collapse"})])],-1),i("details",null,[i("summary",null,"作用"),i("h2",{id:"它的作用",tabindex:"-1"},[s("它的作用： "),i("a",{class:"header-anchor",href:"#它的作用","aria-label":'Permalink to "它的作用："'},"​")]),i("ul",null,[i("li",null,[s("把 "),i("code",null,"alloca"),s(" 出来的聚合类型（如 "),i("code",null,"struct"),s("、"),i("code",null,"数组"),s("）内存分配中的独立元素，"),i("strong",null,"拆分成单个标量变量"),s("，提升到寄存器，减少内存访问开销")]),i("li",null,"有时还会将一组元素打包成向量（vector）或整型位域"),i("li",null,"避免拆解那些只是简单搬运进出内存的内存块，保持内存操作简单高效"),i("li",null,"会多轮迭代，直到所有能提升的元素都完成替换"),i("li",null,[s("也被视为"),i("strong",null,"辅助构建 SSA 形式"),s("的重要步骤")])]),i("h2",{id:"总结一句-2",tabindex:"-1"},[s("总结一句： "),i("a",{class:"header-anchor",href:"#总结一句-2","aria-label":'Permalink to "总结一句："'},"​")]),i("p",null,[i("strong",null,"SROA 是 LLVM 中一种把结构体/数组内存分配拆成寄存器变量的优化 pass"),s("，通过提升局部变量，减少内存访问，优化性能，同时也便于后续 SSA 形式的优化。")])],-1)])]),"main-header":l(()=>[n(a.$slots,"main-header")]),"main-header-after":l(()=>[n(a.$slots,"main-header-after")]),"main-nav":l(()=>[n(a.$slots,"main-nav")]),"main-content-before":l(()=>[n(a.$slots,"main-content-before")]),"main-content":l(()=>[n(a.$slots,"main-content")]),"main-content-after":l(()=>[n(a.$slots,"main-content-after")]),"main-nav-before":l(()=>[n(a.$slots,"main-nav-before")]),"main-nav-after":l(()=>[n(a.$slots,"main-nav-after")]),comment:l(()=>[n(a.$slots,"comment")]),footer:l(()=>[n(a.$slots,"footer")]),aside:l(()=>[n(a.$slots,"aside")]),"aside-custom":l(()=>[n(a.$slots,"aside-custom")]),default:l(()=>[n(a.$slots,"default")]),_:3},8,["frontmatter"])}}};export{O as default,D as usePageData};
